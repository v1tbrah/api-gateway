// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/feed/{id}": {
            "get": {
                "description": "Returns posts by user feed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feed"
                ],
                "summary": "Returns posts by user feed.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/fapi.Post"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/post/hashtag": {
            "post": {
                "description": "Creates hashtag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hashtag"
                ],
                "summary": "Creates hashtag.",
                "parameters": [
                    {
                        "description": "Hashtag body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/papi.CreateHashtagReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/papi.CreateHashtagResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/post/hashtag/{id}": {
            "get": {
                "description": "Returns hashtag by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Returns hashtag.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hashtag id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/papi.GetHashtagResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/post/post": {
            "post": {
                "description": "Creates post.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "summary": "Creates post.",
                "parameters": [
                    {
                        "description": "Post body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/papi.CreatePostReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/papi.CreatePostResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/post/post/get_by_hashtag": {
            "post": {
                "description": "Returns posts by hashtag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "summary": "Returns posts by hashtag.",
                "parameters": [
                    {
                        "description": "GetPostsByHashtagReq body. Direction: 0 - first, 1 - next, 2 - prev",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/papi.GetPostsByHashtagReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/papi.Post"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/post/post/{id}": {
            "get": {
                "description": "Returns post by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "summary": "Returns post.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/papi.GetPostResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/relation/friend": {
            "post": {
                "description": "Adds to friends.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "Adds to friends.",
                "parameters": [
                    {
                        "description": "AddFriendReq body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rapi.AddFriendReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes from friends.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "Removes from friends.",
                "parameters": [
                    {
                        "description": "RemoveFriendReq body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rapi.RemoveFriendReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/relation/friend/get_friends_by_user": {
            "post": {
                "description": "Returns friends by user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relation"
                ],
                "summary": "Returns friends by user.",
                "parameters": [
                    {
                        "description": "GetFriendsByUserReq body. Direction: 0 - first, 1 - next, 2 - prev",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rapi.GetFriendsByUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/user/city": {
            "get": {
                "description": "Returns all cities.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Returns all cities.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/uapi.GetCityResp"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates city.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Creates city.",
                "parameters": [
                    {
                        "description": "City body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/uapi.CreateCityReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uapi.CreateCityResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/user/city/{id}": {
            "get": {
                "description": "Returns city by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Returns city.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "City id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uapi.GetCityResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/user/interest": {
            "get": {
                "description": "Returns all interests.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interest"
                ],
                "summary": "Returns all interests.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/uapi.GetCityResp"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates interest.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interest"
                ],
                "summary": "Creates interest.",
                "parameters": [
                    {
                        "description": "Interest body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/uapi.CreateInterestReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uapi.CreateInterestResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/user/interest/{id}": {
            "get": {
                "description": "Returns interest by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interest"
                ],
                "summary": "Returns interest.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Interest id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uapi.GetInterestReq"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/user/user": {
            "post": {
                "description": "Creates user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Creates user.",
                "parameters": [
                    {
                        "description": "User body",
                        "name": "objectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/uapi.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uapi.CreateUserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        },
        "/user/user/{id}": {
            "get": {
                "description": "Returns user by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Returns user.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uapi.GetUserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/send.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "fapi.Post": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "hashtags_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "papi.AddHashtagToPostReq": {
            "type": "object",
            "properties": {
                "hashtag_id": {
                    "type": "integer",
                    "example": 1
                },
                "post_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "papi.CreateHashtagReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "#cat"
                }
            }
        },
        "papi.CreateHashtagResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "papi.CreatePostReq": {
            "type": "object"
        },
        "papi.CreatePostResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "papi.Direction": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "First",
                "Next",
                "Prev"
            ]
        },
        "papi.GetHashtagResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "#cat"
                }
            }
        },
        "papi.GetPostResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "My cat"
                },
                "hashtags_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "papi.GetPostsByHashtagReq": {
            "type": "object",
            "properties": {
                "direction": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/papi.Direction"
                        }
                    ],
                    "example": 0
                },
                "hashtagID": {
                    "type": "integer",
                    "example": 1
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "post_offset_id": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "papi.Post": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "hashtags_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "rapi.AddFriendReq": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "integer",
                    "example": 2
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "rapi.Direction": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "First",
                "Next",
                "Prev"
            ]
        },
        "rapi.GetFriendsByUserReq": {
            "type": "object",
            "properties": {
                "direction": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/rapi.Direction"
                        }
                    ],
                    "example": 0
                },
                "friend_id": {
                    "type": "integer",
                    "example": 1
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "post_offset_id": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "rapi.RemoveFriendReq": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "integer",
                    "example": 2
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "send.Error": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "uapi.CreateCityReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Moscow"
                }
            }
        },
        "uapi.CreateCityResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "uapi.CreateInterestReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Music"
                }
            }
        },
        "uapi.CreateInterestResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "uapi.CreateUserReq": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer",
                    "example": 1
                },
                "interests_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "uapi.CreateUserResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "uapi.GetCityResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Moscow"
                }
            }
        },
        "uapi.GetInterestReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "uapi.GetUserResp": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer",
                    "example": 1
                },
                "interests_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Social-network API",
	Description:      "This is a simple social-network server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
